# Create common base stage
FROM centos:7 as base

#FROM centos/python-36-centos7 as base
# Chinese support
RUN rm -rf /etc/localtime  && \
    ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime  && \
    yum -y install kde-l10n-Chinese  && \
    yum -y reinstall glibc-common  && \
    localedef -c -f UTF-8 -i zh_CN zh_CN.utf8  && \
    yum clean all  &&  rm -rf /var/cache/yum

ENV LC_ALL zh_CN.utf8

# Install Python 3.6
RUN yum -y install https://centos7.iuscommunity.org/ius-release.rpm && \
    yum -y install python36u && \
    yum -y install python36u-pip && \
    yum -y install vim && \
    yum clean all  &&  rm -rf /var/cache/yum

# COPY pip.conf
COPY pip.conf /etc/pip.conf

# Make sure we have the latest pip version
RUN python3.6 -m pip install -U pip

RUN python3.6 -m pip --no-cache-dir install \
        Pillow \
        h5py \
        ipykernel \
        jupyter \
        matplotlib \
        numpy \
        pandas \
        scipy==0.18.1 \
        sklearn \
        && \
    python3.6 -m ipykernel.kernelspec


#############################################
## Original docker start
#############################################
# Install common libraries
RUN yum update -y

# required by psycopg2 at build and runtime
RUN yum install -y libpqxx-devel 
    
# required for health check
RUN yum install -y curl

RUN yum autoremove -y

FROM base as builder

RUN yum update -y && \
    yum install -y \
    build-essential \
    wget \
    openssh-client \
    gcc \
    gcc-c++ \
    python3-devel \
    graphviz-devel \
    pkg-config \
    git-core \
    openssl \
    openssl-devel \
    libffi \
    libffi-devel \
    libpng-devel

# install poetry
# keep this in sync with the version in pyproject.toml and Dockerfile
ENV POETRY_VERSION 1.0.3
#RUN curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python3.6

# TOO SLOW, let's use pip to get job done
# http://zhunlan.zhihu.com/p/81025311
RUN python3.6 -m pip install --user poetry
RUN echo $POETRY_HOME
RUN python3.6 -m pip -V

# somehow, after install, it is put to ~/.local instead of ~/.poetry ...
ENV PATH "/root/.local/bin:/opt/venv/bin:${PATH}"
RUN python3.6 -m pip -V

# copy files
COPY . /build/
COPY docker/configs/config_pretrained_embeddings_spacy_en_duckling.yml /build/config.yml
# COPY mitie model
COPY data/total_word_feature_extractor.dat /app/data/

# COPY spacy models
COPY data/en_core_web_md-2.1.0.tar.gz /app/data/
COPY data/de_core_news_sm-2.1.0.tar.gz /app/data/

WORKDIR /build

# install dependencies
RUN which poetry
RUN which pip
RUN which python
RUN python3.6 -m venv /opt/venv && \
  . /opt/venv/bin/activate && \
  python3.6 -m pip install --no-cache-dir -U pip && \
  poetry install --extras full --no-dev --no-root --no-interaction && \
  python3.6 -m pip install -U git+https://github.com/tmbo/MITIE.git#egg=mitie && \
  poetry build -f wheel -n && \
  python3.6 -m pip install --no-deps dist/*.whl && \
  rm -rf dist *.egg-info

# upgrade jieba to latest version
RUN python3.6 -m pip install -U "jieba==0.42.1"

# make sure we use the virtualenv
ENV PATH="/opt/venv/bin:$PATH"

RUN python3.6 -m pip -V

# Install and link spacy models
RUN python3.6 -m pip install /app/data/en_core_web_md-2.1.0.tar.gz > /dev/null
RUN python3.6 -m spacy link en_core_web_md en
RUN python3.6 -m pip install /app/data/de_core_news_sm-2.1.0.tar.gz > /dev/null
RUN python3.6 -m spacy link de_core_news_sm de

# start a new build stage
FROM base as runner

# copy everything from /opt
COPY --from=builder /opt/venv /opt/venv

# make sure we use the virtualenv
ENV PATH="/opt/venv/bin:$PATH"

# update permissions & change user to not run as root
WORKDIR /app
RUN chgrp -R 0 /app && chmod -R g=u /app
USER 1001

# Create a volume for temporary data
VOLUME /tmp

# change shell
SHELL ["/bin/bash", "-o", "pipefail", "-c"]

# the entry point
EXPOSE 5005
ENTRYPOINT ["rasa"]
CMD ["--help"]
